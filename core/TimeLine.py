#######################################################
# 
# TimeLine.py
# Python implementation of the Class TimeLine
# Generated by Enterprise Architect
# Created on:
# Original author: Arash Ebrahimnnezhad
# 
#######################################################
import time
from operator import itemgetter


class TimeLine(tuple):

    __slots__ = []

    def __new__(cls, deadline: float, deadline_type: str):
        if not isinstance(deadline, float):
            raise TypeError('deadline argument must be a float')
        if not isinstance(deadline_type, str):
            raise TypeError(
                'deadline_type argument must be a string (s or ms)')
        cls.__beginning_time = time.time_ns()
        cls.__nan_to_second = (10 ** 9)
        return tuple.__new__(cls, (deadline, deadline_type))

    __deadline = property(itemgetter(0))
    __deadline_type = property(itemgetter(1))

    def get_time(self) -> float:
        return (time.time_ns() - self.__beginning_time) / (self.__deadline * self.__nan_to_second)

    def is_time_ended(self):
        """
        :return: True if deadline has been reached
        """
        if self.__deadline_type == 's':
            deadline = self.__deadline
        elif self.__deadline_type == 'ms':
            deadline = self.__deadline/1000  # convert to ms
        else:
            raise ValueError('deadline_type must be s or ms')
        return ((time.time_ns() - self.__beginning_time)/self.__nan_to_second) >= deadline

