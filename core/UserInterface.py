#######################################################
#
# User.py
# Python implementation of the Interface UserInterface
# Generated by Enterprise Architect
# Created on:      26-����-2022 02:24:13 �.�
# Original author: Arash Ebrahimnezhad
#
#######################################################
from core.Preference import Preference
from core.Offer import Offer
from abc import ABC, abstractmethod
from core.AbstractUtilitySpace import AbstractUtilitySpace


class UserInterface(ABC):
    @abstractmethod
    def get_initial_bids_rank(self) -> list:
        """This method returns list of ranked bids in uncertain situation.
        """
        raise NotImplementedError()

    @abstractmethod
    def get_initial_preference(self) -> Preference:
        """This method returns initial preference in certain situation.
        """
        raise NotImplementedError()

    @abstractmethod
    def get_offer_rank(self, offer: Offer) -> list:
        """This method returns a list of bids that exist special bid which has been sent
        to it.
        """
        raise NotImplementedError()

    @abstractmethod
    def get_utility(self, offer: Offer) -> float:
        """This method returns exact utility of an offer
        """
        raise NotImplementedError()

    @abstractmethod
    def get_bothering(self):
        raise NotImplementedError()

    @abstractmethod
    def get_total_bothering(self):
        raise NotImplementedError()

    @abstractmethod
    def update_total_bothering(self) -> float:
        """
        this method updates total bothering amount
        :return: new total bothering amount
        """
        raise NotImplementedError()

    @abstractmethod
    def get_preference(self) -> Preference:
        """
        return exact preference if the user know the exact preference otherwise return None
        :return: preference or None
        """
        raise NotImplementedError()

    def get_utility_space(self) -> AbstractUtilitySpace:
        """
        return exact utility space if the user know the exact utility space otherwise return None
        :return: utility space or None
        """
        raise NotImplementedError()