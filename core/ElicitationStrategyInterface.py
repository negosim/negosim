#######################################################
#
# ElicitationStrategy.py
# Python implementation of the Interface ElicitationStrategyInterface
# Generated by Enterprise Architect
# Created on:
# Original author: Arash Ebrahimnezhad
#
#######################################################
from core.Offer import Offer
from abc import ABC, abstractmethod
from core.StateInfo import StateInfo


class ElicitationStrategyInterface(ABC):

    @abstractmethod
    def ask_initial_ranked_bids_from_user(self):
        raise NotImplementedError()

    @abstractmethod
    def ask_initial_preference_from_user(self):
        raise NotImplementedError()

    @abstractmethod
    def is_asking_time_from_user(self, state_info: StateInfo):
        """
        This method decides about when and which bid elicit from user
        :param state_info:
        Cal
        """
        raise NotImplementedError()

    @abstractmethod
    def ask_offer_rank_from_user(self, offer: Offer) -> list:
        """This method returns a list of ranked bids
        """
        raise NotImplementedError()

    @abstractmethod
    def ask_offer_utility_from_user(self, offer: Offer) -> float:
        raise NotImplementedError()
