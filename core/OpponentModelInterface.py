#######################################################
#
# OpponentModel.py
# Python implementation of the Interface OpponentModelInterface
# Generated by Enterprise Architect
# Created on:      26-����-2022 02:24:13 �.�
# Original author: DP
#
#######################################################
from core.Preference import Preference
from core.Offer import Offer
from abc import ABC, abstractmethod


class OpponentModelInterface(ABC):

    @abstractmethod
    def get_initial_opponent_preference(self) -> Preference:
        pass

    @abstractmethod
    def get_preference(self) -> Preference:
        pass

    @abstractmethod
    def update_preference(self, offer: Offer) -> Preference:
        pass

    @abstractmethod
    def get_name(self) -> str:
        """
        This method must return the name of opponent model
        :return: the name of opponent model
        """
        raise NotImplementedError()

    @abstractmethod
    def set_preference(self, preference: Preference):
        """
        opponent model needs an initial preference (an initial preference is the preference that the weights are equal
        to 1/n and all evaluation of values are 1)
        :param preference: an initial preference
        """
        raise NotImplementedError()